<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5682cd51-eaec-4701-be9e-a85e1f1e419c" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/annotations/FrameworkAnnotations.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/constants/FrameworkConstants.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/driver/Driver.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/driver/DriverManager.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/enums/CategoryType.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/enums/ConfigProperties.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/enums/WaitStrategy.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/exceptions/DriverInvocationFailedException.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/exceptions/FrameworkException.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/exceptions/IncorrectExcelFilePathException.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/exceptions/InvalidFilePathException.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/exceptions/InvalidPropertyFileKeyException.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/exceptions/InvalidPropertyFilePathException.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/factories/DriverFactory.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/factories/ExplicitWaitFactory.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/listeners/AnnotationTransformer.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/listeners/Listener.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/listeners/MethodInterceptorListener.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/listeners/RetryFailedTest.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/pages/AmazonDrivesStoragePage.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/pages/AmazonHamburgerMenuPage.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/pages/AmazonHomePage.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/pages/AmazonLaptopPage.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/pages/AmazonPrintersInkPage.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/pages/BasePage.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/pages/OrangeHRMDashboardPage.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/pages/OrangeHRMLoginPage.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/reports/ExtentLogger.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/reports/ExtentReportImpl.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/reports/ExtentReportManager.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/utils/DataProviderUtils.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/utils/DecodeUtils.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/utils/DynamicXpathUtils.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/utils/ELKUtils.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/utils/ExcelUtils.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/utils/PropertyFileReader.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/bharath/utils/ScreenshotUtils.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/java/org/bharath/tests/AmazonTests.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/java/org/bharath/tests/BaseTest.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/java/org/bharath/tests/HomePageTests.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/java/org/bharath/tests/LoginPageTests.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/java/org/bharath/tests/OrangeHRMTests.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/java/org/bharath/tests/Sample.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/resources/config/config.properties" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="AnnotationType" />
        <option value="Enum" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2sWFqB8Jmgc1J97kLx9c1vYE0pC" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;TestNG.D:/Intellij Frameworks/untitled/testng.xml.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.Sample.test.executor&quot;: &quot;Run&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/Intellij Frameworks/SampleFramework&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.externalResources&quot;
  }
}</component>
  <component name="RunManager" selected="TestNG.D:/Intellij Frameworks/untitled/testng.xml">
    <configuration name="D:/Intellij Frameworks/untitled/testng.xml" type="TestNG" temporary="true" nameIsGenerated="true">
      <module name="SampleFramework" />
      <option name="SUITE_NAME" value="$PROJECT_DIR$/testng.xml" />
      <option name="TEST_OBJECT" value="SUITE" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Sample.test" type="TestNG" temporary="true" nameIsGenerated="true">
      <module name="SampleFramework" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.bharath.tests.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.bharath.tests" />
      <option name="MAIN_CLASS_NAME" value="org.bharath.tests.Sample" />
      <option name="METHOD_NAME" value="test" />
      <option name="TEST_OBJECT" value="METHOD" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="TestNG.D:/Intellij Frameworks/untitled/testng.xml" />
        <item itemvalue="TestNG.Sample.test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="5682cd51-eaec-4701-be9e-a85e1f1e419c" name="Changes" comment="" />
      <created>1738563613991</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1738563613991</updated>
    </task>
    <servers />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/bharath/listeners/Listener.java</url>
          <line>44</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="TestNG">
        <watch expression="Objects.isNull(key)" />
        <watch expression="Objects.isNull(CONFIGMAP.get(key.name().toLowerCase())" />
        <watch expression="key.name().toLowerCase()" />
        <watch expression="list.get(i).getMethod().getMethodName()" />
        <watch expression="testDetails.get(j).get(&quot;testname&quot;)" />
      </configuration>
    </watches-manager>
  </component>
</project>